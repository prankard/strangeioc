//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using robotlegs.bender.extensions.commandCenter.api;
using robotlegs.bender.extensions.commandCenter.dsl;
using System.Collections.Generic;


namespace robotlegs.bender.extensions.commandCenter.impl
{
	public class CommandMapping : ICommandMapping
	{
		/*============================================================================*/
		/* Public Properties                                                          */
		/*============================================================================*/
		
		private Type _commandClass;
		
		/**
		 * @inheritDoc
		 */
		public Type CommandClass
		{
			get
			{
				return _commandClass;
			}
		}
		
		private string _executeMethod = "execute";
		
		/**
		 * @inheritDoc
		 */
		public string ExecuteMethod
		{
			get
			{
				return _executeMethod;
			}
		}
		
		private List<object> _guards = new List<object>();
		
		/**
		 * @inheritDoc
		 */
		public List<object> Guards
		{
			get
			{
				return _guards;
			}
		}
		
		private List<object> _hooks = new List<object>();
		
		/**
		 * @inheritDoc
		 */
		public List<object> Hooks
		{
			get
			{
				return _hooks;
			}
		}
		
		private bool _fireOnce;
		
		/**
		 * @inheritDoc
		 */
		public bool FireOnce
		{
			get
			{
				return _fireOnce;
			}
		}
		
		private bool _payloadInjectionEnabled = true;
		
		/**
		 * @inheritDoc
		 */
		public bool PayloadInjectionEnabled
		{
			get
			{
				return _payloadInjectionEnabled;
			}
		}
		
		/*============================================================================*/
		/* Constructor                                                                */
		/*============================================================================*/
		
		/**
		 * Creates a Command Mapping
		 * @param commandClass The concrete Command class
		 */
		public CommandMapping(Type commandClass)
		{
			_commandClass = commandClass;
		}
		
		/*============================================================================*/
		/* Public Functions                                                           */
		/*============================================================================*/
		
		/**
		 * @inheritDoc
		 */
		public ICommandMapping SetExecuteMethod(string name)
		{
			_executeMethod = name;
			return this;
		}
		
		/**
		 * @inheritDoc
		 */
		public ICommandMapping AddGuards(params object[] guards)
		{
			_guards.AddRange(guards);
			return this;
		}
		
		/**
		 * @inheritDoc
		 */
		public ICommandMapping AddHooks(params object[] hooks)
		{
			_hooks.AddRange(hooks);
			return this;
		}
		
		/**
		 * @inheritDoc
		 */
		public ICommandMapping SetFireOnce(bool value)
		{
			_fireOnce = value;
			return this;
		}
		
		/**
		 * @inheritDoc
		 */
		public ICommandMapping SetPayloadInjectionEnabled(bool value)
		{
			_payloadInjectionEnabled = value;
			return this;
		}
		
		public override string ToString()
		{
			return "Command " + _commandClass;
		}
	}
}

