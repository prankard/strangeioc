//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;


namespace robotlegs.bender.extensions.viewManager.impl
{
	/// <summary>
	/// Container registry
	/// It holds a reference of all view containers on stage (in our case ContextView's)
	/// It should also hold a reference on which containers are parents of each other
	/// It also handles views to the correct container
	/// </summary>


	public static class ContainerRegistry
	{
		private static List<ContainerBinding> bindings = new List<ContainerBinding>();
		public static List<ContainerBinding> Bindings 
		{
			get { return bindings; }
		}
		private static List<ContainerBinding> rootBindings = new List<ContainerBinding>();
		public static List<ContainerBinding> RootBindings 
		{
			get { return rootBindings; }
		}

		private static Dictionary<object, ContainerBinding> BindingsByContainer = new Dictionary<object, ContainerBinding>();

		public static ContainerBinding AddContainer(object container)
		{
			if (BindingsByContainer.ContainsKey(container))
				return BindingsByContainer[container];

			return BindingsByContainer[container] = CreateBinding(container);
		}

		public static ContainerBinding GetBinding(object container)
		{
			return BindingsByContainer[container];
		}

		private static ContainerBinding CreateBinding(object container)
		{
			ContainerBinding binding = new ContainerBinding(container);
			bindings.Add(binding);

			//TODO: Add listener for empty binding

			binding.Parent = FindParentBinding(container);
			if (binding.Parent == null)
				AddRootBinding(binding);
//			Bindings.Add(container);

			//TODO: Re-orgainse bindings, but not by using contains. But by searching parents if possible

			//TODO: Dispatch ContainerAddEvent
			return binding;
		}

		private static ContainerBinding FindParentBinding(object container)
		{
			return null;
		}

		private static void AddRootBinding(ContainerBinding binding)
		{
			rootBindings.Add(binding);
			//TODO: Dispatch add root binding
		}

		public static void HandleView(object view, Type type)
		{
			foreach (ContainerBinding binding in bindings)
			{
				binding.HandleView(view, type);
			}
		}
	}
}

