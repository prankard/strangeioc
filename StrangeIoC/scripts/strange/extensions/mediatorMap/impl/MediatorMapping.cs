//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using strange.extensions.mediatorMap.api;
using strange.extensions.matching;
using System.Collections.Generic;
using strange.extensions.mediatorMap.dsl;


namespace strange.extensions.mediatorMap.impl
{
	public class MediatorMapping : IMediatorMapping, IMediatorConfigurator
	{
		/*============================================================================*/
		/* Public Properties                                                          */
		/*============================================================================*/
		
		private ITypeFilter _matcher;
		
		/**
		 * @inheritDoc
		 */
		public ITypeFilter Matcher
		{
			get
			{ 
				return _matcher;
			}
		}
		
		private Type _mediatorType;
		
		/**
		 * @inheritDoc
		 */
		public Type MediatorType
		{
			get
			{
				return _mediatorType;
			}
		}
		
		private List<object> _guards = new List<object>();
		
		/**
		 * @inheritDoc
		 */
		public List<object> Guards
		{
			get
			{
				return _guards;
			}
		}
		
		private List<object> _hooks = new List<object>();
		
		/**
		 * @inheritDoc
		 */
		public List<object> Hooks
		{
			get
			{
				return _hooks;
			}
		}
		
		private bool _autoRemoveEnabled = true;
		
		/**
		 * @inheritDoc
		 */
		public bool AutoRemoveEnabled
		{
			get
			{
				return _autoRemoveEnabled;
			}
		}

		/*============================================================================*/
		/* Constructor                                                                */
		/*============================================================================*/

		public MediatorMapping (ITypeFilter matcher, Type mediatorType)
		{
			_matcher = matcher;
			_mediatorType = mediatorType;
		}

		/*============================================================================*/
		/* Public Functions                                                           */
		/*============================================================================*/

		public IMediatorConfigurator WithGuards(params object[] guards)
		{
			_guards.AddRange (guards);
			return this;
		}


		public IMediatorConfigurator WithHooks(params object[] hooks)
		{
			_hooks.AddRange (hooks);
			return this;
		}


		public IMediatorConfigurator AutoRemove(bool value)
		{
			_autoRemoveEnabled = value;
			return this;
		}
	}
}

